***************
User Attributes
***************

==================================
Grouping Attributes Under Sections
==================================

Use the ``attrSections`` interface on any node instance to organise Channel Box attributes into groups (see
:class:`~paya.lib.attrs.Sections` for a full reference):

.. tabs::

    .. tab:: Paya

        .. code-block:: python

            control = r.PyNode('settings_CTRL')
            visSection = control.attrSections.add('VISIBILITY_OPTIONS')
            visSection.collect(['primary_ct_vis', 'secondary_ct_vis'])

            fxSection = control.attrSections.add('DEFORM_OPTIONS')
            fxSection.collect(['smoothing_iterations', 'fast_mode'])

    .. tab:: Before

        .. figure:: before_sections.png
            :align: center

    .. tab:: After

        .. figure:: after_sections.png
            :align: center

===============================
Enabling / Disabling Attributes
===============================

To quickly specify which attributes on a control should be available for setting or keying, use
:meth:`~paya.nodetypes.dependNode.DependNode.maskAnimAttrs`. This is similar to the ``keyable`` and ``channelBox``
arguments on :func:`~paya.lib.controls.createControl`, but works with any animatable attribute:

.. tabs::

    .. tab:: Paya

        .. code-block:: python

            ct = r.PyNode('L_leg_IK_CTRL')
            ct.maskAnimAttrs(k=['t', 'r', 'sy', 'stretchy'])
            ct.attrSections.add('IK_OPTIONS').collect(['stretchy'])

    .. tab:: Before

        .. figure:: mask_before.png
            :align: center

    .. tab:: After

        .. figure:: mask_after.png
            :align: center

Several lower-level methods on Paya's base :class:`~paya.plugtypes.attribute.Attribute` class are also of interest:
:meth:`~paya.plugtypes.attribute.Attribute.lock` (with added ``recursive`` option),
:meth:`~paya.plugtypes.attribute.Attribute.unlock` (with added ``recursive`` and ``force`` options),
:meth:`~paya.plugtypes.attribute.Attribute.show`,
:meth:`~paya.plugtypes.attribute.Attribute.hide`,
:meth:`~paya.plugtypes.attribute.Attribute.enable` and :meth:`~paya.plugtypes.attribute.Attribute.disable`.

=====================
Reordering Attributes
=====================

Paya can reorder Channel Box attributes which are user-defined (i.e. not 'factory' attributes like ``translateX``),
animatable (i.e. not string, matrix etc.) and non-compound. To reorder attributes using an explicit list, call
:meth:`~paya.nodetypes.dependNode.DependNode.reorderAttrs` on any node instance:

.. tabs::

    .. tab:: Paya

        .. code-block:: python

            ct = r.PyNode('settings_CTRL')

            attrs = ['L_smile', 'L_frown', 'L_sad', 'L_happy',
                    'R_smile', 'R_frown', 'R_sad', 'R_happy']

            # Sort alphabetically
            attrs = list(sorted(attrs))

            ct.reorderAttrs(attrs)

    .. tab:: Before

        .. figure:: before_reorder.png
            :align: center

    .. tab:: After

        .. figure:: after_reorder.png
            :align: center

To nudge individual attributes, call :meth:`~paya.plugtypes.attribute.Attribute.sendAbove` or
:meth:`~paya.plugtypes.attribute.Attribute.sendBelow` on the attributes themselves. Namesake methods are also available
on :class:`~paya.lib.attrs.Section` objects to move entire attribute groups:

.. tabs::

    .. tab:: Paya

        .. code-block:: python

            ct.attrSections['L_MOUTH'].sendAbove('L_EYE')
            ct.attrSections['R_MOUTH'].sendAbove('L_EYE')

    .. tab:: Before

        .. figure:: reorder_sections_before.png

    .. tab:: After

        .. figure:: reorder_sections_after.png