****************************
paya.runtime.nodes.CurveWarp
****************************

.. py:currentmodule:: paya.runtime.nodes

.. py:class:: CurveWarp(*args, **kwargs)

    .. py:classmethod:: create(*geometryAndCurve, aimCurve=None, autoNormals=True, closestPoint=True, keepLength=True, loopClosedCurves=True, alignment='auto', samplingAccuracy=1.0, offset=0.0, name=None)
    
        Initialises a curveWarp deformer.
        
        :param \*geometryAndCurve: required; the curve and one or more
            meshes to bind, in no particular order
        :type:
            str,
            :class:`~paya.runtime.nodes.NurbsCurve`,
            :class:`~paya.runtime.nodes.Mesh`,
            :class:`~paya.runtime.nodes.Transform`
        :param aimCurve/aic: a curve to use for up vector resolution;
            defaults to False
        :type aimCurve/aic: str, None,
            :class:`~paya.runtime.nodes.Transform`,
            :class:`~paya.runtime.nodes.NurbsCurve`
        :param bool autoNormals/aut: if no *aimCurve* is provided, set normal
            calculation on the node (attribute ``aimMode``) to 'Auto'
            rather than 'Curve Normals'; defaults to True
        :param bool closestPoint/cp: set this to False when the two curves
            are of matched domain, to cut down on extraneous closest-point
            calculations; defaults to True
        :param bool keepLength/kl: keep the driven geometries' lengths;
            defaults to True
        :param bool loopClosedCurves/lcc: loop sliding on closed curves;
            defaults to True
        :param alignment/ali: an index or enum key for the ``alignment``
            node attribute:
        
            - 1: 'Auto' (the default)
            - 2: 'X'
            - 3: 'Y'
            - 4: 'Z'
        :param float samplingAccuracy/acc: the curve sampling accuracy;
            defaults to 1.0
        :param offset/off: a slide offset along the curve; defaults to
            0.0
        :type offset/off: float, :class:`~paya.runtime.plugs.Math1D`
        :param name/n: one or more name elements for the node
        :type name/n: None, str, int, list, tuple
        :return: The deformer node.
        :rtype: :class:`CurveWarp`