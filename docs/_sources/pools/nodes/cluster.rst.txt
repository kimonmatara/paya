**************************
paya.runtime.nodes.Cluster
**************************

.. py:currentmodule:: paya.runtime.nodes

.. py:class:: Cluster(*args, **kwargs)

    .. rubric:: Inheritance

    :class:`~pymel.core.nodetypes.Cluster` :class:`~paya.runtime.nodes.WeightGeometryFilter` :class:`~pymel.core.nodetypes.WeightGeometryFilter` :class:`~paya.runtime.nodes.GeometryFilter` :class:`~pymel.core.nodetypes.GeometryFilter` :class:`~paya.runtime.nodes.DependNode` :class:`~pymel.core.nodetypes.DependNode` :class:`~pymel.core.general.PyNode` :class:`~pymel.util.utilitytypes.ProxyUnicode`



    .. py:classmethod:: create(*geos, geometry=None, handle=None, maintainOffset=None, conformShapeName=False, resetVisualOrigin=True, intermediateShape=None, worldMatrix=None, freeze=True, name=None, **mayaKwargs)
    
        Cluster constructor.
        
        :param str name/n: a name for the cluster node; defaults to ``None``
        :param \*geos: one or more geometries to bind
        :type \*geos: None, str, tuple, list,
            :class:`~paya.runtime.nodes.DeformableShape`,
            :class:`~paya.runtime.nodes.Transform`
        :param geometry/g: alternative geometry aggregator; defaults to None
        :type geometry/g: None, str, tuple, list,
            :class:`~paya.runtime.nodes.DeformableShape`,
            :class:`~paya.runtime.nodes.Transform`
        :param handle/hnd: a custom user handle (weighted node) for the
            cluster; if provided, will override the *weightedNode* / *wn*
            argument for :func:`~pymel.core.animation.cluster`; defaults to
            None
        :param bool maintainOffset/mo: prevent deformation jumps when
            assigning a custom handle that has transform values; if provided,
            will override the *bindState* / *bs* argument for
            :func:`~pymel.core.animation.cluster`; defaults to None
        :param bool conformShapeName/csn: when using a custom handle, rename
            the :class:`~paya.runtime.nodes.ClusterHandle` node accordingly;
            defaults to True
        :param bool resetVisualOrigin/rvo: when using a custom handle, modify
            ``origin`` on the :class:`~paya.runtime.nodes.ClusterHandle` node
            accordingly; defaults to True
        :param bool intermediateShape/i: sets the 'intermediate' state of the
            :class:`~paya.runtime.nodes.ClusterHandle` node; where a custom
            weighted node is specified, this defaults to True if the
            destination parent has hero shapes, otherwise False; if no custom
            handle is specified, defaults to False
        :param worldMatrix/wm: ignored if a custom handle is specified;
            modifes the initial matrix of the default cluster handle; defaults
            to None
        :param bool freeze/fr: ignored if *worldMatrix* was omitted, or if
            a custom handle was specified; after applying custom
            transformations to the default handle, freeze transform and scale
            but preserve rotation; defaults to True
        :type worldMatrix/wm: None, list, tuple,
            :class:`~paya.runtime.data.Matrix`
        :param \*\*mayaKwargs: passed along to
            :func:`~pymel.core.animation.cluster`, except where overriden by
            other options
        :return: The cluster node. To get the handle transform, use
            :meth:`getHandle`.
    
    .. py:method:: getHandle()
    
        Paya's flavour of :meth:`~paya.runtime.nodes.getWeightedNode`. Getter
        for ``handle`` property.
        
        :return: The cluster handle transform (weighted node).
        :rtype: :class:`~paya.runtime.nodes.Transform`
    
    .. py:method:: setHandle(transform, maintainOffset=False, intermediateShape=None, resetVisualOrigin=True, deletePreviousHandle=False, conformShapeName=True)
    
        Swaps-in a custom handle transform (weighted node). Setter for
        ``handle`` property.
        
        :param transform: the node to swap-in
        :type transform: str, :class:`~paya.runtime.nodes.Transform`
        :param bool maintainOffset/mo: prevent changes in deformation;
            defaults to False
        :param bool intermediateShape/i: after reparenting the
            :class:`~paya.runtime.nodes.ClusterHandle` node, set it to
            intermediate; defaults to True if the destination parent has
            hero shapes, otherwise False
        :param bool resetVisualOrigin/rvo: edit the ``origin`` attribute
            on the :class:`~paya.runtime.nodes.ClusterHandle` so that it
            matches the new handle; defauls to True
        :param bool deletePreviousHandle/dph: delete the current weighted node
            after completing the swap
        :param bool copyName/cn: copy the name of the current weighted node
        :param bool conformShapeName/csn: after reparenting the
            :class:`~paya.runtime.nodes.ClusterHandle` node, rename it to
            match the destination transform; defaults to True
        :return: ``self``
        :rtype: :class:`Cluster`
    
    .. py:method:: renameSystem(*name)
    
        Renames the cluster node, cluster handle shape and weighted node.
        
        :param str \*name: if omitted, defaults to contextual naming
        :return: ``self``
        :rtype: `Cluster`
    
    .. py:method:: getHandleShape()
    
        Getter for ``handleShape`` property.
        
        :return: The connected class:`~paya.runtime.nodes.ClusterHandle` node,
            if any.
        :rtype: class:`~paya.runtime.nodes.ClusterHandle`
    
    .. py:method:: normalize()
    
        Compensates transformations on the cluster to un-deform the geometry.
        
        :return: ``self``
        :rtype: :class:`Cluster`