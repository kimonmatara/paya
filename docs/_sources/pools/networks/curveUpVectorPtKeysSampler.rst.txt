************************************************
paya.runtime.networks.CurveUpVectorPtKeysSampler
************************************************

.. py:currentmodule:: paya.runtime.networks

.. py:class:: CurveUpVectorPtKeysSampler(*args, **kwargs)

    .. rubric:: Inheritance

    :class:`~paya.runtime.networks.CurveUpVectorRemapSampler` :class:`~paya.runtime.networks.CurveUpVectorSampler` :class:`~paya.runtime.networks.System` :class:`~paya.runtime.nodes.Network` :class:`~pymel.core.nodetypes.Network` :class:`~paya.runtime.nodes.DependNode` :class:`~pymel.core.nodetypes.DependNode` :class:`~pymel.core.general.PyNode` :class:`~pymel.util.utilitytypes.ProxyUnicode`

    Solves for parallel transport in both directions for each key segment,
    and blends between the solutions by angle, with unwinding options.
    
    Works similarly to
    :class:`~paya.runtime.networks.CurveUpVectorIkSplineStyleSampler`, but
    with properly-localised twist.

    .. py:classmethod:: create(curve, paramVectorKeys, interpolation='Linear', resolution=9, unwindSwitch=0)
    
        :param curve: the curve on which to create the sampler
        :type curve: str, :class:`paya.runtime.nodes.NurbsCurve`,
            :class:`paya.runtime.nodes.Transform`,
            :class:`paya.runtime.plugs.NurbsCurve`
        :param paramVectorKeys: zipped *parameter, vector* pairs, indicating
            known up vectors along the curve; at least two such keys are
            needed
        :type paramVectorKeys:
            [[:class:`float` | :class:`str` | :class:`~paya.runtime.plugs.Math1D`],
            [:class:`tuple` | :class:`list`,
            :class:`paya.runtime.data.Vector`,
            :class:`paya.runtime.plugs.Vector`]]
        :param interpolation/i: a string label or integer value or plug
            specifying how to interpolate between the keyed pairs, namely:
        
            -   ``0`` (``'None'``) (you wouldn't normally want this)
            -   ``1`` (``'Linear'``) (the default)
            -   ``2`` (``'Smooth'``)
            -   ``3`` (``'Spline'``)
        
        :type interpolation/i: int, str, :class:`~paya.runtime.plugs.Math1D`
        :param int resolution/res: the number of parallel-transport solutions to
            generate along the curve; higher numbers improve accuracy at the
            expense of performance; defaults to 9
        :param unwindSwitch/uws: an integer value or plug, or a list of integer
            values or plugs (one per segment, i.e.
            ``len(paramVectorKeys)-1``) specifying how to resolve angle-
            blending edge cases:
        
            -   ``0`` (shortest, the default)
            -   ``1`` (positive)
            -   ``2`` (negative)
        
        :type unwindSwitch/uws: :class:`int`, :class:`str`,
            :class:`~paya.runtime.plugs.Math1D`,
        [:class:`int` | :class:`str` | :class:`~paya.runtime.plugs.Math1D`]
        :return: The network system.
        :rtype: :class:`CurveUpVectorPtKeysSampler`