***********************************************
paya.runtime.networks.CurveUpVectorRemapSampler
***********************************************

.. py:currentmodule:: paya.runtime.networks

.. py:class:: CurveUpVectorRemapSampler(*args, **kwargs)

    .. rubric:: Inheritance

    :class:`~paya.runtime.networks.CurveUpVectorSampler` :class:`~paya.runtime.networks.System` :class:`~paya.runtime.nodes.Network` :class:`~pymel.core.nodetypes.Network` :class:`~paya.runtime.nodes.DependNode` :class:`~pymel.core.nodetypes.DependNode` :class:`~pymel.core.general.PyNode` :class:`~pymel.util.utilitytypes.ProxyUnicode`

    Abstract base class for up vector samplers that interpolate using a
    remapValue node.

    .. py:classmethod:: create(curve, keymap, interpolation='Linear')
    
        Not for direct use; called by the subclasses.
        
        :param curve: the curve on which to create the sampler
        :type curve: str, :class:`paya.runtime.nodes.NurbsCurve`,
            :class:`paya.runtime.nodes.Transform`,
            :class:`paya.runtime.plugs.NurbsCurve`
        :param keymap: zipped *parameter, vector* pairs, indicating
            known up vectors along the curve; at least two such keys are
            needed
        :type keymap:
            [[:class:`float` | :class:`str` | :class:`~paya.runtime.plugs.Math1D`],
            [:class:`tuple` | :class:`list`,
            :class:`paya.runtime.data.Vector`,
            :class:`paya.runtime.plugs.Vector`]]
        :param interpolation/i: a string label or integer value or plug
            specifying how to interpolate between the keyed pairs, namely:
        
            -   ``0`` (``'None'``) (you wouldn't normally want this)
            -   ``1`` (``'Linear'``) (the default)
            -   ``2`` (``'Smooth'``)
            -   ``3`` (``'Spline'``)
        
        :type interpolation/i: int, str, :class:`~paya.runtime.plugs.Math1D`
        :return: The network system.
        :rtype: :class:`CurveUpVectorRemapSampler`