********************************
paya.runtime.plugs.EulerRotation
********************************

.. py:currentmodule:: paya.runtime.plugs

.. py:class:: EulerRotation(*args, **kwargs)

    .. py:method:: createLocator(name=None, rotateOrder='xyz')
    
        :shorthand: ``cl``
        
        :param name/n: one or more optional name elements; defaults to None
        :rtype name/n: None, list, int, str
        :param rotateOrder/ro: the rotate order of this euler rotation;
            defaults to 'xyz'
        :type rotateOrder/ro: int, str,
            :class:`~paya.runtime.plugs.Attribute`
        :return: A locator with this euler rotation piped into its
            ``rotate`` channels.
        :rtype: :class:`~paya.runtime.nodes.Transform`
    
    .. py:method:: get(plug=False, **kwargs)
    
        Overrides :meth:`~paya.runtime.plugs.Attribute.get` to return
        :class:`~paya.runtime.data.EulerRotation` values. If this is the
        ``rotate`` channel on a transform node, rotation order is taken
        from the transform.
    
    .. py:method:: set(*args, **kwargs)
    
        Overloads :meth:`~paya.runtime.plugs.Attribute.get` to ensure
        that instances of :class:`~paya.runtime.data.EulerRotation`
        with units that don't match the UI setting are set correctly.
    
    .. py:method:: isRotateChannel()
    
        :return: True if this is the ``rotate`` channel on a transform,
            otherwise False.
        :rtype: bool
    
    .. py:method:: asQuaternion(rotateOrder='xyz')
    
        Returns this euler compound as a quaternion.
        
        :param rotateOrder/ro: the rotate order, defaults to 'xyz'
        :type rotateOrder/ro: :class:`Math1D`, str, int
        :return: The quaternion.
        :rtype: :class:`~paya.runtime.plugs.Quaternion`
    
    .. py:method:: asRotateMatrix(rotateOrder='xyz')
    
        Returns this euler compound as a rotation matrix.
        
        :param rotateOrder/ro: the rotate order, defaults to 'xyz'
        :type rotateOrder/ro: :class:`Math1D`, str, int
        :return: A triple euler angle compound.
        :rtype: :class:`~paya.runtime.plugs.Math3D`