************************
paya.runtime.plugs.Angle
************************

.. py:currentmodule:: paya.runtime.plugs

.. py:class:: Angle(*args, **kwargs)



    .. rubric:: Inheritance

    :class:`~paya.runtime.plugs.Unit` :class:`~paya.runtime.plugs.Math1D` :class:`~paya.runtime.plugs.Attribute` :class:`~pymel.core.general.Attribute` :class:`~pymel.core.general.PyNode` :class:`~pymel.util.utilitytypes.ProxyUnicode`

    .. py:method:: get(plug=False, default=None, **kwargs)
    
        Overloads :py:meth:`paya.runtime.plugs.Attribute.get` to return
        :class:`~paya.runtime.data.Angle` instances instead of
        :class:`float`.
    
    .. py:method:: set(*args, **kwargs)
    
        Overloads :meth:`~paya.runtime.plugs.Attribute.get` to ensure
        that instances of :class:`~paya.runtime.data.Angle`
        with units that don't match the UI setting are set correctly.
    
    .. py:method:: unwind()
    
        :return: This angle, unwound and with the sign preserved.
        :rtype: :class:`Angle`
    
    .. py:method:: unwindPositive()
    
        :return: The unwound positive form of the angle.
        :rtype: :class:`Angle`
    
    .. py:method:: unwindNegative()
    
        :return: The unwound negative form of the angle.
        :rtype: :class:`Angle`
    
    .. py:method:: unwindShortest()
    
        :return: This angle, unwound and, if less than -180 or greater than
            180, flipped.
        :rtype: :class:`Angle`
    
    .. py:method:: unwindSwitch(switchSource, shortestIndex=0, positiveIndex=1, negativeIndex=2)
    
        Unwinds this angle using a mode picked using an integer value or plug
        (typically an animator switcher attribute).
        
        :param switchSource: either an integer value to pick an
            implementation, or an attribute of type ``enum`` or ``int`` to
            switch between all implementations
        :type switchSource: int, str, :class:`~paya.runtime.plugs.Math1D`
        :param int shortestIndex/si: the attribute output value that should
            activate 'shortest' mode; defaults to 0
        :param int positiveIndex/pi: the attribute output value that should
            activate 'positive' mode; defaults to 1
        :param int negativeIndex/ni: the attribute output value that should
            activate 'negative' mode; defaults to 2
        :return: The switched output.
        :rtype: :class:`Angle`