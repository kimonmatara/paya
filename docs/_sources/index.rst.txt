Paya: PyMEL Unleashed
=====================

**Paya** is a `patch <https://en.wikipedia.org/wiki/Monkey_patch>`_ for
`PyMEL <https://help.autodesk.com/view/MAYAUL/2022/ENU/?guid=__PyMel_index_html>`_
to overcome the limitations of the
`virtual classes <https://github.com/LumaPictures/pymel/blob/master/examples/customClasses.py>`_ system. It unlocks
customisation for component, attribute (including subtype) and data classes, implements true inheritance
and offers a simpler authoring workflow with full support for techniques such as
:doc:`operator overloading <op_overl_tutorial>`.

This first release establishes the :ref:`patching mechanism <implementation>` for anyone who wants to try their hand
at customisation. Future releases will add methods for TDs.


Contents
--------

- To install, see :doc:`setup`.
- To start playing, browse the User Guide.
- For a reference of every module in the package, go to :doc:`Module Documentation <paya>`.
- To peek under the hood, see :doc:`implementation`.
- To report a bug, request a feature or just say hello, head over to :doc:`author`.

.. toctree::
    :hidden:

    setup

.. toctree::
    :caption: User Guide
    :hidden:

    Importing and Patch Management <importing_and_patch_management>
    Using the Runtime Interface <using_the_runtime_interface>
    Tutorial #1: Custom Methods <method_tutorial>
    Tutorial #2: Custom Constructors <cust_cstr_tutorial>
    Tutorial #3: Custom Operators <op_overl_tutorial>
    More Customisation <more_customisation>


.. toctree::
    :caption: Appendices
    :hidden:

    Module Documentation <paya>
    implementation
    author