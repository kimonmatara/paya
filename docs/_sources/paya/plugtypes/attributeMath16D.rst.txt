================================================
paya.plugtypes.attributeMath16D.AttributeMath16D
================================================

.. py:module:: paya.plugtypes.attributeMath16D

.. py:class:: AttributeMath16D(*args, **kwargs)

    .. py:method:: __add__(other, swap=False)
    
        Implements **addition** (``+``).
        
        :param other: a 16D value or plug
    
    .. py:method:: __mul__(other, swap=False)
    
        Implements **multiplication** (``*``).
        
        :param other: a value or plug of dimension 3 (left only) or 16.
    
    .. py:method:: __radd__(other)
    
        Implements **reflected addition** (``+``). See :meth:`__add__`.
    
    .. py:method:: __rmul__(other)
    
        Implements **reflected multiplication** (``*``). See :meth:`__mul__`.
    
    .. py:method:: __rxor__(other)
    
        Uses the exclusive-or operator (``^``) to implement
        **point-matrix multiplication** (reflected only).
        
        :param other: a 3D value or plug
    
    .. py:method:: asOffset()
    
        Inverts this matrix once, to create an offset matrix. Equivalent to:
        
        .. code-block:: python
        
            self.get().inverse() * self
        
        :return: The offset matrix.
        :rtype: :class:`AttributeMath16D`
    
    .. py:method:: inverse()
    
        :return: The inverse of this matrix.
        :rtype: :class:`AttributeMath16D`
    
    .. py:method:: pick(translate=None, rotate=None, scale=None, shear=None, default=None)
    
        Filters this matrix through one or more pickMatrix nodes, depending on
        combinations with 'default'. Flags are defined by omission, Maya-style.
        
        :shorthand: pk
        
        :param bool translate/t: use translate
        :param bool rotate/r: use rotate
        :param bool scale/s: use scale
        :param shear/sh: use shear
        :param default: take omitted fields from this matrix; can be a value
            or plug; defaults to None
        :type default: list, :class:`~paya.datatypes.matrix.Matrix`, str,
            :class:`~paya.plugtypes.attributeMath16D.AttributeMath16D`
        :return: The filtered matrix.
        :rtype: :class:`~paya.plugtypes.attributeMath16D.AttributeMath16D`