==============================================
paya.plugtypes.attributeMath1D.AttributeMath1D
==============================================

.. py:module:: paya.plugtypes.attributeMath1D

.. py:class:: AttributeMath1D(*args, **kwargs)

    .. py:method:: __add__(other, swap=False)
    
        Implements **addition** (``+``).
        
        :param other: a value or plug of dimension 1, 2, 3 or 4
    
    .. py:method:: __mul__(other, swap=False)
    
        Implements **multiplication** (``-``).
        
        :param other: a value or plug of dimension 1 or 3
    
    .. py:method:: __neg__()
    
        Implements unary negation (``-``).
        :return: ``self * -1.0``
    
    .. py:method:: __pow__(other, modulo=None, swap=False)
    
        Implements **power** (``**``). The *modulo* keyword argument is
        ignored.
        
        :param other: a value or plug of dimension 1 or 3
    
    .. py:method:: __radd__(other)
    
        Implements **reflected addition** (``+``). See :meth:`__add__`.
    
    .. py:method:: __rmul__(other)
    
        Implements **reflected multiplication** (``-``). See :meth:`__mul__`.
    
    .. py:method:: __rpow__(other)
    
        Implements **reflected power** (``**``). See :meth:`__pow__`.
    
    .. py:method:: __rsub__(other)
    
        Implements **reflected subtraction** (``-``). See :meth:`__sub__`.
    
    .. py:method:: __rtruediv__(other)
    
        Implements **reflected division** (``/``). See :meth:`__truediv__`.
    
    .. py:method:: __sub__(other, swap=False)
    
        Implements **subtraction** (``-``).
        
        :param other: a value or plug of dimension 1, 2, 3
    
    .. py:method:: __truediv__(other, swap=False)
    
        Implements **division** (``/``).
        
        :param other: a value or plug of dimension 1 or 3