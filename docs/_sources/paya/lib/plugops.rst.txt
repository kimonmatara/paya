================
paya.lib.plugops
================

.. py:module:: paya.lib.plugops

.. py:function:: isPlug(item)

    :param item: the item to inspect
    :return: ``True`` if *item* represents an attribute, otherwise ``False``.
    :rtype: bool

.. py:function:: isScalarValue(value)

    :param value: the value to inspect
    :return: ``True`` if *value* is an instance of :class:`int`,
        :class:`float`, :class:`bool` or
        :class:`~pymel.core.datatypes.Unit`
    :rtype: bool

.. py:function:: info(item, angle=False)

    :param item: a value or plug (simple or PyMEL type)
    :param bool angle/a: where possible, conform to one of the following:
    
        - :class:`~paya.runtime.data.Angle`
        - :class:`~paya.runtime.data.EulerRotation`
        - :class:`~paya.runtime.plugs.Angle`
        - :class:`~paya.runtime.plugs.EulerRotation`
    
        Defaults to False.
    
    :return: A tuple of: conformed item, item maths dimension (or None),
        item is a plug

.. py:function:: asGeoPlug(item, worldSpace=False)

    :param item: a geometry node or plug
    :type item: str, :class:`~paya.runtime.nodes.DagNode`,
        :class:`~paya.runtime.plugs.DagNode`
    :param bool worldSpace/ws: if *item* is a node, pull its world-
        space geometry output; defaults to ``False``
    :raises RuntimeError: Could not derive a geometry output.
    :return: A geometry output.

.. py:function:: asValue(item)

    :param item: the item to inspect
    :return: If *item* represents a plug, its value; otherwise, the conformed
        *item*.