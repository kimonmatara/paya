==============
paya.lib.names
==============

.. py:module:: paya.lib.names

Node-naming utilities, usually called indirectly.

.. py:function:: legalise(name)

    Modifies a string so that Maya will accept it as a node name.
    
    :param str name: the string to conform
    :return: The Maya name.

.. py:function:: conformElems(*elems)

    Cleans up user name elements, typically specified through ``*args``
    and / or the ``name/n`` keyword argument.
    
    :param \*elems: one or more name elements, packed or unpacked
    :type \*elems: int, str
    :return: The conformed elements.
    :rtype: list

.. py:function:: isTypeSuffix(string)

    Checks if 'string' looks like a type suffix, i.e. it's a group of
    uppercase letters starting with a non-number, or is a value inside
    :attr:`paya.lib.suffixes.suffixes`.
    
    :param string: The string to inspect
    :return: ``True`` if 'string' looks like a type suffix, otherwise
        ``False``.
    :rtype: bool

.. py:function:: shorten(name, stripNamespace=False, stripDagPath=False, stripTypeSuffix=False)

    Shortens a Maya name to various degrees. The name will be returned as-is
    unless one or more flags are set to ``True``.
    
    :param str name: the name to process
    :param bool stripNamespace/sns: remove namespace information; defaults to
        False
    :param bool stripDagPath/sdp: remove DAG path information; defaults to
        False
    :param bool stripTypeSuffix/sts: removes anything that looks like a type
        suffix; defaults to False
    :return: the modified name
    :rtype: str

.. py:class:: Name(*elems, padding=None)

    Context manager. Accumulates name elements hierarchically, and can also
    be used to override config['padding'].
    
    :param elems: one or more name elements, packed or unpacked
    :type elems: int, str
    :param padding/pad: if provided, will be used to set padding defaults for
        the block
    :type padding/pad: None, int

.. py:function:: make(*elems, name=None, node=None, nodeType=None, control=False)

    Constructs Maya node names.
    
    :config keys: ``suffixNodes``, ``padding``, ``inheritNames``
    :param \*elems: one or more name elements
    :type \*elems: int, str, list
    :param name/n: elements passed-through via a ``name`` argument;
        these will always be prepended to \*elems; defaults to None
    :type name/n: int, str, list, None
    :param bool control/ct: ignore the *node* and *nodeType* arguments
        and apply the Paya suffix for controls; defaults to False
    :param node: ignored if ``nodeType`` has been provided; a node to inspect
        to determine the node type suffix; defaults to None
    :type node: None, str, :class:`~pymel.core.general.PyNode`
    :param nodeType/nt: a reference node type for the suffix lookups, or
        'payaControl' for controls; defaults to None
    :type nodeType/nt: None, str
    :return: A Maya node name.
    :rtype: str